---
import "@/styles/index.css";
import type { FrontmatterPage, IFrontmatter } from "@/types/IFrontMatter";
import { sortByDate } from "@/utils/Posts";
import { AppConfig } from "@/utils/AppConfig";
import { BlogGallery } from "@/components/pages/BlogGallery";
import { PaginationHeader } from "@/components/PaginationHeader";
import { Section } from "@/components/Section";
import { CTA } from "@/partials/CTA";
import Base from "@/partials/Base.astro";

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allPosts = await Astro.glob<IFrontmatter>("./*.md");
  const sortedPosts = sortByDate(allPosts);

  // Return a paginated collection of paths for all posts
  return paginate(sortedPosts, { pageSize: 6 });
}

interface Props {
  page: FrontmatterPage;
}

const { page } = Astro.props as Props;
const titleSuffix = ` - ${AppConfig.site_name}`;
const titleBase = `Blog page ${page.currentPage}`;
const title = titleBase + titleSuffix;
const description =
  "Pagination example built with Astro styled with Tailwind CSS.";
---

<Base head={{ title, description }}>
  <Section>
    <PaginationHeader
      title="Random title here"
      description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    />
  </Section>

  <Section>
    <BlogGallery postList={page.data} />
  </Section>

  <Section>
    <div class-name="flex justify-center gap-8">
      {page.url.prev && <a href={page.url.prev}>← Newer Posts</a>}
      {page.url.next && <a href={page.url.next}>Older Posts →</a>}
    </div>
  </Section>

  <CTA />
</Base>
